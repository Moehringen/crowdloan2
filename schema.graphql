
type Auction @entity {
  id: ID! #id is a required field
  blockNum: Int!
  status: String!
  bids: [Bid]! @derivedFrom(field: "auction")
  # winningBids: [WinningBid]! @derivedFrom(field: "auction")
  leaseStart: Int
  slotsStart: Int!
  leaseEnd: Int
  slotsEnd: Int!
  closingStart: Int!
  closingEnd: Int!
  resultBlock: Int
  ongoing: Boolean! @index
  parachains: [AuctionParachain]! @derivedFrom(field: "auction")
}

# type Account @entity {
#   id: ID!
#   isFund: Boolean!
# }

type Parachain @entity {
  id: ID!
  paraId: Int!
  createdAt: Date
  creationBlock: Int
  deregistered: Boolean!
  deposit: BigInt!
  manager: String!
  leased: [ParachainLeased] @derivedFrom(field: "parachain")
  bids: [Bid] @derivedFrom(field: "parachain")
  funds: [Crowdloan] @derivedFrom(field: "parachain")
  # activeFund: Crowdloan
  # latestBid: Bid
  winningBlocks: [WinningBlock] @derivedFrom(field: "parachain") # should query individually for active auction
  chronicle: Chronicle
}

type Crowdloan @entity {
  id: ID! # generated fund address
  parachain: Parachain!
  retiring: Boolean!
  depositor: String!
  verifier: String
  cap: BigInt!
  raised: BigInt!
  lockExpiredBlock: Int!
  blockNum: Int
  firstSlot: Int!
  lastSlot: Int!
  # contributions: [Contribution] @derivedFrom(field: "fund") # should included only for specific Fund
}

type ParachainLeased @entity {
  id: ID!
  parachain: Parachain!
  firstSlot: Int!
  lastSlot: Int!
  blockNum: Int!
  winningAmount: BigInt!
}

type AuctionParachain @entity {
  id: ID!
  auction: Auction!
  parachain: Parachain!
  blockNum: Int!
  createdAt: Date!
  firstSlot: Int!
  lastSlot: Int!
}

# type WinningBid @entity {
#   id: ID!
#   bid: Bid!
#   slotIdx: String! @index
#   auction: Auction!
#   firstSlot: Int!
#   lastSlot: Int!
# }

type WinningBlock @entity {
  id: ID!
  auction: Auction!
  parachain: Parachain!
  blockNum: Int!
  bid: Bid!
  firstSlot: Int!
  lastSlot: Int!
}

type Bid @entity {
  id: ID!
  auction: Auction!
  winningAuction: Int @index # auctionId
  blockNum: Int!
  parachain: Parachain!
  isCrowdloan: Boolean!
  amount: BigInt!
  fund: Crowdloan
  firstSlot: Int!
  lastSlot: Int!
  bidder: String
  createdAt: Date!
}

type Contribution @entity {
  id: ID!
  account: String!
  parachain: Parachain!
  fund: Crowdloan!
  amount: BigInt!
  blockNum: Int!
  createdAt: Date!
}

type Chronicle @entity {
  id: ID! # Static 'ChronicleKey'
  curAuction: Auction
  curBlockNum: Int
  curLease: Int
  curLeaseStart: Int
  curLeaseEnd: Int
  parachains: [Parachain] @derivedFrom(field: "chronicle")
}

type CrowdloanSequence @entity {
  id: ID!
  curIndex: Int!
  bumpAt: String
}
